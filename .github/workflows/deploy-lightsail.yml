name: Deploy to Lightsail Containers

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  LIGHTSAIL_SERVICE: ${{ secrets.LIGHTSAIL_SERVICE }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: main
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (for asset build)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build frontend assets
        working-directory: backend
        run: |
          npm ci
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::331134574228:role/GitHubActions-LightsailDeployRole
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install lightsailctl plugin
        run: |
          set -euo pipefail
          if ! command -v lightsailctl >/dev/null 2>&1; then
            echo "Installing lightsailctl..."
            curl -sSL https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl -o lightsailctl
            sudo install -m 0755 lightsailctl /usr/local/bin/lightsailctl
            rm -f lightsailctl
          else
            echo "lightsailctl already installed"
          fi

      - name: Resolve Lightsail service name
        run: |
          set -euo pipefail
          SERVICE_NAME="${{ secrets.LIGHTSAIL_SERVICE }}"
          if [ -z "$SERVICE_NAME" ]; then
            SERVICE_NAME="${{ vars.LIGHTSAIL_SERVICE }}"
          fi
          if [ -z "$SERVICE_NAME" ]; then
            echo "ERROR: LIGHTSAIL_SERVICE is not set in secrets or repository variables."
            echo "Set 'LIGHTSAIL_SERVICE' in GitHub Secrets or Repository Variables."
            exit 1
          fi
          echo "LIGHTSAIL_SERVICE=$SERVICE_NAME" >> "$GITHUB_ENV"
          echo "Resolved service name: $SERVICE_NAME"

      - name: Ensure Lightsail service exists (idempotent)
        run: |
          aws lightsail create-container-service \
            --service-name "$LIGHTSAIL_SERVICE" \
            --power small \
            --scale 1 \
          || echo "Service already exists"

      - name: Build Docker images
        run: |
          docker build -f infra/docker/php/Dockerfile.prod -t app:${GITHUB_SHA} .
          docker build -f infra/docker/nginx/Dockerfile.prod -t web:${GITHUB_SHA} .

      - name: Push images to Lightsail (app)
        id: push_app
        run: |
          aws lightsail push-container-image \
            --service-name "$LIGHTSAIL_SERVICE" \
            --label app \
            --image app:${GITHUB_SHA}

      - name: Push images to Lightsail (web)
        id: push_web
        run: |
          aws lightsail push-container-image \
            --service-name "$LIGHTSAIL_SERVICE" \
            --label web \
            --image web:${GITHUB_SHA}

      - name: Deploy to Lightsail service
        env:
          APP_URL: ${{ secrets.APP_URL }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          # Images are referred as SERVICE_NAME/label:latest in Lightsail
          APP_IMAGE="${LIGHTSAIL_SERVICE}/app:latest"
          WEB_IMAGE="${LIGHTSAIL_SERVICE}/web:latest"

          cat > deployment.json <<'JSON'
          {
            "containers": {
              "app": {
                "image": "APP_IMAGE_PLACEHOLDER",
                "environment": {
                  "APP_ENV": "production",
                  "APP_DEBUG": "false",
                  "APP_URL": "APP_URL_PLACEHOLDER",
                  "DB_CONNECTION": "mysql",
                  "DB_HOST": "DB_HOST_PLACEHOLDER",
                  "DB_PORT": "DB_PORT_PLACEHOLDER",
                  "DB_DATABASE": "DB_DATABASE_PLACEHOLDER",
                  "DB_USERNAME": "DB_USERNAME_PLACEHOLDER",
                  "DB_PASSWORD": "DB_PASSWORD_PLACEHOLDER"
                }
              },
              "web": {
                "image": "WEB_IMAGE_PLACEHOLDER",
                "ports": { "80": "HTTP" },
                "environment": {
                  "APP_ENV": "production"
                }
              }
            },
            "publicEndpoint": {
              "containerName": "web",
              "containerPort": 80
            }
          }
          JSON

          sed -i "s#APP_IMAGE_PLACEHOLDER#${APP_IMAGE}#g" deployment.json
          sed -i "s#WEB_IMAGE_PLACEHOLDER#${WEB_IMAGE}#g" deployment.json
          sed -i "s#APP_URL_PLACEHOLDER#${APP_URL}#g" deployment.json
          sed -i "s#DB_HOST_PLACEHOLDER#${DB_HOST}#g" deployment.json
          sed -i "s#DB_PORT_PLACEHOLDER#${DB_PORT:-3306}#g" deployment.json
          sed -i "s#DB_DATABASE_PLACEHOLDER#${DB_DATABASE}#g" deployment.json
          sed -i "s#DB_USERNAME_PLACEHOLDER#${DB_USERNAME}#g" deployment.json
          sed -i "s#DB_PASSWORD_PLACEHOLDER#${DB_PASSWORD}#g" deployment.json

          cat deployment.json

          aws lightsail create-container-service-deployment \
            --service-name "$LIGHTSAIL_SERVICE" \
            --cli-input-json file://deployment.json
